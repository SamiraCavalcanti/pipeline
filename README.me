# Configuração do Jenkins no Tomcat com Monitoramento via Prometheus e Grafana

## Introdução

Esta atividade tem como objetivo configurar um servidor Jenkins atualizado em um servidor de aplicação Tomcat, seguido da implantação de um sistema de monitoramento utilizando Prometheus e Grafana. Este processo é parte essencial para a avaliação e teste de ferramentas de integração e entrega contínuas (CI/CD) utilizadas pela empresa.

## Passo a Passo da Configuração do Jenkins no Tomcat

### 1. Preparação do Ambiente

1. Crie um diretório para armazenar os arquivos necessários:
   ```bash
   mkdir jenkins-tomcat
   cd jenkins-tomcat
   ```

2. Baixe os arquivos oficiais do [Tomcat](https://tomcat.apache.org/) e do Jenkins.

3. Extraia o arquivo `apache-tomcat-11.0.2.zip` para o diretório `/opt/`:
   ```bash
   sudo unzip apache-tomcat-11.0.2.zip -d /opt/
   ```

4. Dê permissão de execução aos arquivos `.sh` da pasta `bin`:
   ```bash
   sudo chmod +x /opt/apache-tomcat-11.0.2/bin/*.sh
   ```

### 2. Configuração do Tomcat

1. Edite o arquivo de usuários do Tomcat para adicionar credenciais:
   ```bash
   sudo vim /opt/apache-tomcat-11.0.2/conf/tomcat-users.xml
   ```
   Adicione o seguinte conteúdo dentro da tag `<tomcat-users>`:
   ```xml
   <user username="admin" password="admin" roles="manager-gui,admin-gui" />
   ```

2. Inicie o Tomcat:
   ```bash
   cd /opt/apache-tomcat-11.0.2/bin
   sudo ./startup.sh
   ```

3. Acesse o Tomcat Web Application Manager em: `http://localhost:8080`.

### 3. Configuração do Jenkins

1. Mova o arquivo `jenkins.war` para a pasta `webapps` do Tomcat:
   ```bash
   sudo mv jenkins.war /opt/apache-tomcat-11.0.2/webapps/
   ```

2. Atualize o Tomcat e abra o Jenkins no navegador em: `http://localhost:8080/jenkins`.

3. Recupere a senha inicial do Jenkins com o comando:
   ```bash
   sudo cat /root/.jenkins/secrets/initialAdminPassword
   ```

4. Configure o Jenkins com as credenciais administrativas e siga os passos iniciais.

---

## Monitoramento do Jenkins com Prometheus e Grafana

### Arquivo `prometheus.yml`
```yaml
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: "jenkins"
    metrics_path: "/jenkins/prometheus"
    static_configs:
      - targets:
          ['172.25.0.1:8282']
```

### Arquivo `docker-compose.yml`
```yaml
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
```

### Configuração do Monitoramento

1. Certifique-se de que os arquivos `prometheus.yml` e `docker-compose.yml` estejam no mesmo diretório.

2. Inicie os serviços Prometheus e Grafana:
   ```bash
   docker-compose up -d
   ```

3. Acesse o Prometheus em: `http://localhost:9090` e o Grafana em: `http://localhost:3000`.

4. No Grafana, configure o Prometheus como fonte de dados e crie painéis para monitorar as métricas do Jenkins.

---

## Imagens

Adicione capturas de tela das etapas principais para ilustrar o processo:
- **Estrutura do diretório**
- **Configuração do Tomcat**
- **Jenkins em execução**
- **Painel do Grafana com métricas do Jenkins**

---

## Tecnologias Utilizadas

![Jenkins](https://img.shields.io/badge/Jenkins-blue?logo=jenkins&logoColor=white&style=flat-square)
![Tomcat](https://img.shields.io/badge/Tomcat-yellow?logo=apache-tomcat&logoColor=white&style=flat-square)
![Prometheus](https://img.shields.io/badge/Prometheus-orange?logo=prometheus&logoColor=white&style=flat-square)
![Grafana](https://img.shields.io/badge/Grafana-red?logo=grafana&logoColor=white&style=flat-square)
![Docker](https://img.shields.io/badge/Docker-blue?logo=docker&logoColor=white&style=flat-square)
